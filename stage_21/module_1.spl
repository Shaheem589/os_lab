alias functionnum R1;
alias PID R2;
if(functionnum == 1)then
	alias counter R3;
	counter = 0;
	while(counter < 16)do
		if([PROCESS_TABLE + counter * 16 + 4] == TERMINATED)then
			[PROCESS_TABLE + counter * 16 + 1] = counter;
			[PROCESS_TABLE + counter * 16 + 4] = ALLOCATED;
			[PROCESS_TABLE + counter * 16 + 14] = PAGE_TABLE_BASE + 20 * counter;
			[PROCESS_TABLE + counter * 16 + 15] = 10;
			R0 = counter;
			return;
		endif;
		counter = counter + 1;
	endwhile;
	R0 = -1;
	return;
endif;
if(functionnum == 2)then
	multipush(R1,R2);
	R1 = 2;
	alias areapage R3;
	areapage = [PROCESS_TABLE + PID*16 + 11];
	call MOD_2;
	multipop(R1,R2);
	return;
endif;
if(functionnum == 3)then
	if([PROCESS_TABLE + PID * 16 + 9] !=9) then
		alias counter R3;
		counter = 1;
		while(counter < 16)do
			if([PROCESS_TABLE + counter * 16 + 4] == WAIT_PROCESS && [PROCESS_TABLE + counter * 16 + 5] == PID)then
				[PROCESS_TABLE + counter * 16 + 4] = READY;
			endif;
			if([PROCESS_TABLE + counter * 16 + 2]==PID)then
				[PROCESS_TABLE + counter * 16 + 2] = -1;
			endif;
			counter = counter + 1;
		endwhile;

	endif;
	multipush(R1,R2);
	R1 = 4;
	call MOD_1;
	R1 = 2;
	call MOD_1;
	multipop(R1,R2);
	[PROCESS_TABLE + PID*16 + 4] = TERMINATED;
	return;
endif;
if(functionnum == 4)then
	[PTBR + 0] = -1;
	[PTBR + 1] = "0000";
	[PTBR + 2] = -1;
	[PTBR + 3] = "0000";
	alias counter R7;
	counter = 2;
	while(counter<10) do
		if([PTBR + 2 * counter] != -1)then
			 multipush(R1,R2,R3);
			 R1 = 2;
			 R3 = [PTBR + 2 * counter];
			call MOD_2;
			[PTBR + 2 * counter] = -1;
			[PTBR + 2 * counter +1] = "0000";
	 		multipop(R1,R2,R3);
		endif;
		counter = counter + 1;
	endwhile;
	counter = 2;
	while(counter < 4) do
		if([DISK_MAP_TABLE + PID * 10 + counter]!=-1)then
			multipush(R1,R2,R3);
			R1 = 4;
			R3 = [DISK_MAP_TABLE + PID * 10 + counter];
			call MOD_2;
			multipop(R1,R2,R3);
		endif;
		counter = counter + 1;
	endwhile;
	counter = 8;
	while(counter < 10) do
		if([DISK_MAP_TABLE + PID * 10 + counter]!=-1)then
			R1 = 4;
			multipush(R1,R2,R3,R4);
			R3 = [DISK_MAP_TABLE + PID * 10 + counter];
			call MOD_2;
			multipop(R1,R2,R3,R4);
		endif;
		counter = counter + 1;
	endwhile;
	counter = 2;
	while(counter < 10) do
		[DISK_MAP_TABLE + PID * 10 + counter] = -1;
		counter = counter + 1;
	endwhile;
	return;
endif;

