alias currentPID R0;
currentPID = [SYSTEM_STATUS_TABLE + 1];
multipush(BP);
alias process_table_entry R1;
process_table_entry = PROCESS_TABLE + currentPID * 16;
[process_table_entry + 12] = SP % 512;
[process_table_entry + 14] = PTBR;
[process_table_entry + 15] = PTLR;
alias newPID R2;
alias flag R4;
flag=0;
newPID=currentPID+1;
while(newPID<=15) do              //newPID<=15
	if([PROCESS_TABLE + 16*newPID +4]==CREATED || [PROCESS_TABLE + 16*newPID +4]==READY) then
		flag=1;
		break;
	endif;
	newPID=newPID+1;
endwhile;

if(flag==0) then
	newPID=1;
	while(newPID<currentPID) do             //newPID<=currentPID-1
		if([PROCESS_TABLE + 16*newPID +4]==CREATED || [PROCESS_TABLE + 16*newPID +4]==READY) then
			flag=1;
			break;
		endif;
		newPID=newPID+1;
	endwhile;
endif;
if(flag==0) then 
	newPID=0;
endif;
alias new_process_table R3;
new_process_table = PROCESS_TABLE +  newPID* 16;
PTBR = [new_process_table + 14];
PTLR = [new_process_table + 15];
[SYSTEM_STATUS_TABLE + 1] = newPID;

if ([new_process_table + 4] == CREATED) then
	SP = [new_process_table + 13];			
	BP = [[new_process_table + 11] * 512];
	[new_process_table + 4] = RUNNING; 
	[new_process_table + 9] = 0;
	ireturn;	
endif;
[new_process_table + 4] = RUNNING;
SP = [new_process_table + 11] * 512 + [new_process_table + 12];               //This should be before multipop(BP) as BP is on top of user stack
multipop(BP);
return;
