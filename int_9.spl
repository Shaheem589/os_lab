[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 9;
alias userSP R0;
userSP = SP;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 13] = SP;
SP = [PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 11] * 512 - 1;
alias name R1;
name = [[PTBR + 2 * ((userSP - 2) / 512)] * 512 + ((userSP - 2) % 512)];
alias currentPID R2;
currentPID = [SYSTEM_STATUS_TABLE + 1];
alias counter R5;
counter=1;
alias flag R6;
flag=0;
while(counter<60)do
	if([INODE_TABLE + counter*16 + 1]==name) then
		flag=counter;
		break;
	endif;
	counter = counter + 1;
endwhile;
alias RetVal R7;
RetVal = ([PTBR + 2 * ((userSP - 1) / 512)] * 512) + ((userSP - 1) % 512);
if(flag==0) then
	[RetVal] = -1;
	SP = userSP;
	ireturn;
endif;
multipush(R0,R1,R2,R3,R4,R5);
R1 = 3;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;
multipop(R0,R1,R2,R3,R4,R5);
alias userareapage R3;
userareapage = [PROCESS_TABLE + currentPID * 16 + 11];
[MEMORY_FREE_LIST + userareapage] = [MEMORY_FREE_LIST + userareapage] + 1;
[SYSTEM_STATUS_TABLE + 2] = [SYSTEM_STATUS_TABLE + 2] - 1;
SP = userareapage * 512 - 1;

alias perprocess R4;
perprocess = [PROCESS_TABLE + 16 + 11] + 512 - 16;
counter = 0;
while(counter < 8) do
	[perprocess + 2 * counter] = -1;
	counter = counter + 1;
endwhile;

[PROCESS_TABLE + currentPID * 16 + 4] = RUNNING;
[PROCESS_TABLE + currentPID * 16 + 7] = flag;
multipush(R0,R1,R2,R3,R4,R5);
R1 = 4;
R2 = [SYSTEM_STATUS_TABLE + 1];
call MOD_1;

PTBR = PAGE_TABLE_BASE + [SYSTEM_STATUS_TABLE + 1] * 20;
[PTBR + 0] = 63;
[PTBR + 2] = 64;

R1 = 1;
call MOD_2;
[PTBR + 16] = R0;

R1 = 1;
call MOD_2;
[PTBR + 18] = R0;

alias blocknum R3;
R1 = 5;
currentPID = [SYSTEM_STATUS_TABLE + 1];
blocknum = [INODE_TABLE + 16 * [PROCESS_TABLE + currentPID * 16 + 7] + 8];
call MOD_2;
[PTBR + 8] = R0;
[PTBR + 9] = "0100";
multipop(R0,R1,R2,R3,R4,R5);
[PTBR + 1] = "0100";
[PTBR + 3] = "0100";
counter = 0;
while(counter<2) do
	[PTBR + 4 + 2*counter] = -1;
	[PTBR + 5 + 2*counter] = "0000";
	counter = counter + 1;
endwhile;
counter = 1;
while(counter<4) do
	[PTBR + 8 + 2*counter] = -1;
	[PTBR + 9 + 2*counter] = "0000";
	counter = counter + 1;
endwhile;

[PTBR + 17] = "0110";
[PTBR + 19] = "0110";

counter = 2;
while(counter<10) do
	[DISK_MAP_TABLE + currentPID * 10 + counter] = -1;
	counter = counter + 1;
endwhile;

counter = 4;
while(counter<8) do
	[DISK_MAP_TABLE + currentPID * 10 + counter] = [INODE_TABLE + [PROCESS_TABLE + currentPID * 16 + 7] * 16 + counter + 4];
	counter = counter + 1;
endwhile;
[PROCESS_TABLE + [SYSTEM_STATUS_TABLE + 1] * 16 + 9] = 0;
[[PTBR + 16] * 512] = [[PTBR + 8] * 512 + 1];
SP = 8 * 512;
ireturn;
